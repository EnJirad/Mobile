MENUXMR = 1
gg.setVisible(false)

local GG = gg.PACKAGE
local GG_Path = "/storage/emulated/0/Android/data/" .. GG .. "/cache/"
local GG_Edit = GG_Path .. "dataGame.path"
local GG_Time1 = GG_Path .. "Time1.path"
local GG_Time2 = GG_Path .. "Time2.path"
local GG_Time3 = GG_Path .. "Time3.path"

local target = gg.getTargetPackage()
local saveTarget = target

if not saveTarget:match("^com%.devsisters%.CookieRun") then
else
    local existingFile = io.open(GG_Edit, "r")
    if existingFile then
        existingFile:close()
        local EDF = io.open(GG_Edit, "r")
        local content = EDF:read("*all")
        local Check_Name = content:match("com%.devsisters%.CookieRun")
        if content == saveTarget then
        else
            os.remove(GG_Edit)
            local W_File_Edit = io.open(GG_Edit, "w")
            if W_File_Edit then 
                W_File_Edit:write(saveTarget)
                W_File_Edit:close()
            else
                print("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏á ‡∏´‡∏≤ GG ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠")
                return
            end
        end
    else
        local W_File_Edit = io.open(GG_Edit, "w")
        if W_File_Edit then 
            W_File_Edit:write(saveTarget)
            W_File_Edit:close()
        else
            print("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏á ‡∏´‡∏≤ GG ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠")
            return
        end
    end
end

gg.toast("‚îã‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚îã")
gg.sleep(60)
gg.toast("‚îã‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚îã")
gg.sleep(60)
gg.toast("‚îã‚ñì‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚îã")
gg.sleep(60)
gg.toast("‚îã‚ñì‚ñì‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚îã")
gg.sleep(60)
gg.toast("‚îã‚ñì‚ñì‚ñì‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚îã")
gg.sleep(60)
gg.toast("‚îã‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚îã")
gg.sleep(60)
gg.toast("‚îã‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚îã")
gg.sleep(60)
gg.toast("‚îã‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚îã")
gg.sleep(60)
gg.toast("‚îã‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚îã")
gg.sleep(60)
gg.toast("‚îã‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚îã")
gg.sleep(60)
gg.toast("‚îã‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚îã")
gg.sleep(60)
gg.toast("‚îã‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñë‚ñë‚ñë‚îã")
gg.sleep(60)
gg.toast("‚îã‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñë‚ñë‚îã")
gg.sleep(60)
gg.toast("‚îã‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñë‚îã")
gg.sleep(60)
gg.toast("‚îã‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚îã")
gg.sleep(500)
gg.toast("‚úÖ Login : üç© Cookie Run üç™")
gg.sleep(500)

-------------------------------------------------------------------------------------------------------------------

local function Title()
    return
([[-------------------------------------------------------------------------------
  üí¢ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô ü§î
  
  ‚õî ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà ‡∏ï‡πâ‡∏≠‡∏á ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô 1 ‡∏£‡∏≠‡∏ö 
         ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡πà‡∏á‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
      
  üö´ ‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡∏ï‡πà‡∏≠ ‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏ô‡πÅ‡∏ö‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏ó‡∏∏‡∏Å‡∏Å‡∏£‡∏ì‡∏µ 
         ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏¥‡∏î‡∏à‡∏∞‡πÄ‡∏•‡πà‡∏ô Hack ‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™ 
         ‡πÇ‡∏î‡∏ô‡πÅ‡∏ö‡∏ô‡πÄ‡∏™‡∏°‡∏≠ ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞ ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô ‡πÄ‡∏ß‡πà‡∏≠‡πÜ
-------------------------------------------------------------------------------]]) 
end
gg.alert(Title())

function Game_CK()
local function Section()
    return
([[|--------------------------------------------|
   üç© Cookie Run Kakao üç™
|--------------------------------------------|]])
end

    local menu = gg.choice({
            "üçë ‡∏õ‡∏±‡πâ‡∏° ‡∏î‡πà‡∏≤‡∏ô ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤", --1
            "üíé ‡∏õ‡∏±‡πâ‡∏° ‡∏î‡πà‡∏≤‡∏ô ‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á ( ‡∏î‡πà‡∏≤‡∏ô_‡∏ß‡∏ô )", --2
            "‚õî ‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà", --4
            "üõ°Ô∏è ‡∏•‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ ‡∏Å‡∏±‡∏ô‡πÅ‡∏ö‡∏ô ( ‡∏Å‡∏î‡∏≠‡πà‡∏≤‡∏ô ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ )", --5
            "üå≥ ‡∏≠‡∏∑‡πà‡∏ô‡πÜ", --6
            "‚ùå ‡∏õ‡∏¥‡∏î‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå ‚ùå" --7
        }, nil, Section())

    if menu == nil then
    else
        if menu == 1 then Normal_Land() end
        if menu == 2 then Ice_Land() end
        if menu == 3 then Off_All() end
        if menu == 4 then Anti_Ban() end
        if menu == 5 then _Other() end
        if menu == 6 then ex() end
    end
end

-------------------------------------------------------------------------------------------------------------------

function Anti_Ban()
local function Clear_Ban()
return [[-------------------------------------------------------------------------------
  üí¢ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô ‡πÑ‡∏°‡πà‡∏á‡∏±‡πâ‡∏ô‡πÇ‡∏î‡∏ô‡πÅ‡∏ö‡∏ô ‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô ü§î
  
  ‚õî ‡∏ñ‡πâ‡∏≤‡∏õ‡∏±‡πâ‡∏°‡πÄ‡∏Å‡∏¥‡∏ô ‡πÉ‡∏´‡πâ‡∏Å‡∏î‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏Å‡∏° ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≤‡∏Å‡∏ó‡∏¥‡πâ‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
         ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡πâ‡∏≤‡∏°‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Å‡∏° ‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
         ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° GG ‡∏Å‡∏±‡∏ö ‡πÄ‡∏Å‡∏° ‡∏à‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°
         GG ‡∏Å‡∏±‡∏ö ‡∏≠‡∏∞‡πÑ‡∏£‡∏Å‡πá‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏Å‡∏î ( ‡∏ï‡∏Å‡∏•‡∏á )
         ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
-------------------------------------------------------------------------------]]
end

    local result = gg.alert(Clear_Ban(), "‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö", "‡∏ï‡∏Å‡∏•‡∏á")
    if result == 1 then
        gg.toast("‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö")
    elseif result == 2 then
        local content = io.open(GG_Edit, "r"):read("*all")
        local Del_File = "/data/data/" .. content .. "/shared_prefs/Cocos2dxPrefsFile.xml"
        local file = io.open(Del_File, "r")
        if file then
            file:close()
            os.remove(Del_File)
            gg.alert("üî∞ ‡∏•‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
        else
            gg.alert("‚õî ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ ‡∏•‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Å‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≠‡∏Å")
        end
    end
end

-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

local NM1_address = nil
local NM1_Check = false
local NM1_Original = {}

local HP_Original = {}
local HP_Original_Value = {}

local Sag_Original = {}
local Sag_Original_Value = {}

local NM2_Original = {}
local NM2_Check = false
local NM2_Original_Value = {}

local NM3_Original = {}
local NM3_Check = false
local NM3_Original_Value = {}

-------------------------------------------------------------------------------------------------------------------

function NM_return()
    gg.setValues(HP_Original_Value)
    gg.sleep(50)
    gg.setValues(Sag_Original_Value)
    gg.sleep(50)
    if NM1_Check then
        gg.clearResults()
        for address, value in pairs(NM1_Original) do
            gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
        end
        gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
        NM1_Check = false
    end
    gg.sleep(50)
    
    if NM2_Check then
        gg.clearResults()
        gg.setValues(NM2_Original_Value)
        gg.removeListItems(NM2_Original)
        gg.toast("üåø ‡∏õ‡∏¥‡∏î ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á ‡πÅ‡∏•‡πâ‡∏ß üå≤")
        NM2_Check = false
    end
    gg.sleep(50)
    
    if NM3_Check then
        gg.clearResults()
        gg.setValues(NM3_Original_Value)
        gg.removeListItems(NM3_Original)
        gg.toast("üéã ‡∏õ‡∏¥‡∏î ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á ‡πÅ‡∏•‡πâ‡∏ß ‚òÉÔ∏è")
        NM3_Check = false
    end
end

-------------------------------------------------------------------------------------------------------------------

function Normal_Land()
        result = gg.alert("üê≤ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏Å‡∏Ç‡∏≠‡∏á ‡πÅ‡∏û‡∏ó\n\n: ‡πÄ‡∏™‡∏Å‡πÑ‡∏ß ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÇ‡∏î‡∏ô‡πÅ‡∏ö‡∏ô‡∏™‡∏π‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÄ‡∏≠‡∏á", "‡πÄ‡∏™‡∏Å‡∏õ‡∏Å‡∏ï‡∏¥", "‡πÄ‡∏™‡∏Å‡πÑ‡∏ß ( VIP )")

        if result == 1 then
            gg.toast("‡πÉ‡∏ä‡πâ‡πÄ‡∏™‡∏Å‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÅ‡∏•‡πâ‡∏ß")
        elseif result == 2 then
            gg.clearResults()
            gg.setRanges(gg.REGION_CODE_APP)
            gg.searchNumber("1062232653D;-8040W;-3153W:9", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
            gg.refineNumber("1062232653", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
            Sag_Original = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
            
            if #Sag_Original == 0 then
                gg.alert("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏Ñ‡πà‡∏≤ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≠‡∏Å ‚ùó")
                gg.clearResults()
                Game_CK()
            end
            
            Sag_Original_Value = gg.getValues(Sag_Original)
            for i, v in ipairs(Sag_Original) do
                if v.flags == gg.TYPE_DWORD then
                    v.value = "-1062232653"
                end
                gg.setValues(Sag_Original)
                gg.toast("‡πÉ‡∏ä‡πâ‡πÄ‡∏™‡∏Å‡πÑ‡∏ß ‡πÅ‡∏•‡πâ‡∏ß")
            end
        else
            gg.toast("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏Å‡∏Ç‡∏≠‡∏á")
            Game_CK()
            return
        end
        
        if not NM1_address then
        gg.clearResults()
        gg.setRanges(gg.REGION_CODE_APP)
        gg.searchNumber("0.81399995089F;123,346.3515625F:5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
        gg.refineNumber("0.81399995089", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
        HP_Original = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
        
        if #HP_Original == 0 then
            gg.alert("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏Ñ‡πà‡∏≤ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≠‡∏Å ‚ùó")
            gg.clearResults()
            Game_CK()
        end
        
        HP_Original_Value = gg.getValues(HP_Original)
        for i, v in ipairs(HP_Original) do
            if v.flags == gg.TYPE_FLOAT then
                v.value = "6.10544144e35"
            end
            gg.setValues(HP_Original)
        end
      
        gg.clearResults()
        gg.setRanges(gg.REGION_CODE_APP)
        gg.searchNumber("4216;4217;4218", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
        local ResultsAll = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
        
        if #ResultsAll == 0 then
            gg.alert("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏Ñ‡πà‡∏≤ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≠‡∏Å ‚ùó")
            gg.clearResults()
            Game_CK()
        end
        NM1_address = ResultsAll[1].address
        
        for i = 1, #ResultsAll do
            local item = ResultsAll[i]
            if item.value == 4216 or item.value == 4217 or item.value == 4218 then
                NM1_Original[item.address] = item.value
                gg.clearResults()
            end
        end
    end
    
    local Name_Choice = {
        "üí† ‡πÉ‡∏™‡πà‡πÇ‡∏Ñ‡πâ‡∏î 4216, 4217, 4218 ‡πÄ‡∏≠‡∏á",
        "üí∞ ‡∏õ‡∏±‡πâ‡∏° ‡πÄ‡∏á‡∏¥‡∏ô 80k ‡πÉ‡∏ä‡πâ x2 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ‡πÑ‡∏î‡πâ ‡∏ö‡∏π‡∏™ ‡∏ß‡∏¥‡πà‡∏á ‡∏î‡πâ‡∏ß‡∏¢",
        "üèÖ ‡∏õ‡∏±‡πâ‡∏° ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏´‡πâ‡∏≤‡∏°‡πÄ‡∏Å‡∏¥‡∏ô 110M",
        "üì¶ ‡∏õ‡∏±‡πâ‡∏° ‡∏Å‡∏•‡πà‡∏≠‡∏á ( ‡∏ö‡∏π‡∏™ ‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏Å‡πá‡∏ö‡∏Å‡∏•‡πà‡∏≠‡∏á ‡∏ñ‡∏∂‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≠‡∏Å )",
        "üé≤ ‡∏õ‡∏±‡πâ‡∏° ‡∏Ç‡∏∂‡πâ‡∏ô ‡πÇ‡∏ö‡∏ô‡∏±‡∏™ ‡∏£‡∏±‡∏ß‡πÜ ‡∏´‡πâ‡∏≤‡∏°‡πÄ‡∏Å‡∏¥‡∏ô 80k ‡∏ö‡∏π‡∏™‡∏î‡πâ‡∏ß‡∏¢",
    }

    local typeChoice = gg.choice(Name_Choice, nil, "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏Å")
    local selectedType = Name_Choice[typeChoice]
    
    if selectedType == nil then
        gg.setValues(HP_Original_Value)
        gg.sleep(50)
        gg.setValues(Sag_Original_Value)
        gg.sleep(50)
        NM_return()
        gg.clearResults()
        gg.toast("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏•‡∏¢ ‚ùó")
        Game_CK()
        return
        
    elseif selectedType == "üí† ‡πÉ‡∏™‡πà‡πÇ‡∏Ñ‡πâ‡∏î 4216, 4217, 4218 ‡πÄ‡∏≠‡∏á" then
        local inputCode = gg.prompt(
            {"‡∏ä‡πà‡∏≠‡∏á : 4216","‡∏ä‡πà‡∏≠‡∏á : 4217", "‡∏ä‡πà‡∏≠‡∏á : 4218"},
            {"4216","4217","4218"},
            {"","",""}
        )
    
        local Address_Value_1 = inputCode[1]
        local Address_Value_2 = inputCode[2]
        local Address_Value_3 = inputCode[3]
        local Name = "üí† ‡πÉ‡∏™‡πà‡πÇ‡∏Ñ‡πâ‡∏î 4216, 4217, 4218 ‡πÄ‡∏≠‡∏á"

        gg.clearResults()
        gg.setValues({
            {address = NM1_address, value = Address_Value_1, flags = gg.TYPE_DWORD},
            {address = NM1_address + 4, value = Address_Value_2, flags = gg.TYPE_DWORD},
            {address = NM1_address + 8, value = Address_Value_3, flags = gg.TYPE_DWORD}
        })
        
        gg.clearResults()
        gg.toast(Name)
        NM1_Check = true
        
    elseif selectedType == "üí∞ ‡∏õ‡∏±‡πâ‡∏° ‡πÄ‡∏á‡∏¥‡∏ô 80k ‡πÉ‡∏ä‡πâ x2 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ‡πÑ‡∏î‡πâ ‡∏ö‡∏π‡∏™ ‡∏ß‡∏¥‡πà‡∏á ‡∏î‡πâ‡∏ß‡∏¢" then
        local Address_Value_1 = "4250"
        local Address_Value_2 = "553"
        local Address_Value_3 = "4260"
        local Name = "üí∞ ‡∏õ‡∏±‡πâ‡∏° ‡πÄ‡∏á‡∏¥‡∏ô 80k ‡πÉ‡∏ä‡πâ x2 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ‡πÑ‡∏î‡πâ ‡∏ö‡∏π‡∏™ ‡∏ß‡∏¥‡πà‡∏á ‡∏î‡πâ‡∏ß‡∏¢"
        
        gg.clearResults()
        gg.setValues({
            {address = NM1_address, value = Address_Value_1, flags = gg.TYPE_DWORD},
            {address = NM1_address + 4, value = Address_Value_2, flags = gg.TYPE_DWORD},
            {address = NM1_address + 8, value = Address_Value_3, flags = gg.TYPE_DWORD}
        })
        
        gg.clearResults()
        gg.toast(Name)
        NM1_Check = true
        
    elseif selectedType == "üèÖ ‡∏õ‡∏±‡πâ‡∏° ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏´‡πâ‡∏≤‡∏°‡πÄ‡∏Å‡∏¥‡∏ô 110M" then
        local Address_Value_1 = "4119"
        local Address_Value_2 = "4220"
        local Address_Value_3 = "4251"
        local Name = "üèÖ ‡∏õ‡∏±‡πâ‡∏° ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏´‡πâ‡∏≤‡∏°‡πÄ‡∏Å‡∏¥‡∏ô 110M"
        
        gg.clearResults()
        gg.setValues({
            {address = NM1_address, value = Address_Value_1, flags = gg.TYPE_DWORD},
            {address = NM1_address + 4, value = Address_Value_2, flags = gg.TYPE_DWORD},
            {address = NM1_address + 8, value = Address_Value_3, flags = gg.TYPE_DWORD}
        })
        
        gg.clearResults()
        gg.toast(Name)
        NM1_Check = true
        
    elseif selectedType == "üì¶ ‡∏õ‡∏±‡πâ‡∏° ‡∏Å‡∏•‡πà‡∏≠‡∏á ( ‡∏ö‡∏π‡∏™ ‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏Å‡πá‡∏ö‡∏Å‡∏•‡πà‡∏≠‡∏á ‡∏ñ‡∏∂‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≠‡∏Å )" then
        local Address_Value_1 = "4250"
        local Address_Value_2 = "4801"
        local Address_Value_3 = "4119"
        local Name = "üì¶ ‡∏õ‡∏±‡πâ‡∏° ‡∏Å‡∏•‡πà‡∏≠‡∏á ( ‡∏ö‡∏π‡∏™ ‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏Å‡πá‡∏ö‡∏Å‡∏•‡πà‡∏≠‡∏á ‡∏ñ‡∏∂‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≠‡∏Å )"
        
        gg.clearResults()
        gg.setValues({
            {address = NM1_address, value = Address_Value_1, flags = gg.TYPE_DWORD},
            {address = NM1_address + 4, value = Address_Value_2, flags = gg.TYPE_DWORD},
            {address = NM1_address + 8, value = Address_Value_3, flags = gg.TYPE_DWORD}
        })
        
        gg.clearResults()
        gg.toast(Name)
        NM1_Check = true
    
    elseif selectedType == "üé≤ ‡∏õ‡∏±‡πâ‡∏° ‡∏Ç‡∏∂‡πâ‡∏ô ‡πÇ‡∏ö‡∏ô‡∏±‡∏™ ‡∏£‡∏±‡∏ß‡πÜ ‡∏´‡πâ‡∏≤‡∏°‡πÄ‡∏Å‡∏¥‡∏ô 80k ‡∏ö‡∏π‡∏™‡∏î‡πâ‡∏ß‡∏¢" then
        local Address_Value_1 = "0"
        local Address_Value_2 = "4121"
        local Address_Value_3 = "4344"
        local Name = "üé≤ ‡∏õ‡∏±‡πâ‡∏° ‡∏Ç‡∏∂‡πâ‡∏ô ‡πÇ‡∏ö‡∏ô‡∏±‡∏™ ‡∏£‡∏±‡∏ß‡πÜ ‡∏´‡πâ‡∏≤‡∏°‡πÄ‡∏Å‡∏¥‡∏ô 80k ‡∏ö‡∏π‡∏™‡∏î‡πâ‡∏ß‡∏¢"

        gg.clearResults()
        gg.setValues({
            {address = NM1_address, value = Address_Value_1, flags = gg.TYPE_DWORD},
            {address = NM1_address + 4, value = Address_Value_2, flags = gg.TYPE_DWORD},
            {address = NM1_address + 8, value = Address_Value_3, flags = gg.TYPE_DWORD}
        })
        
        gg.clearResults()
        gg.toast(Name)
        NM1_Check = true
    end
    
    for i = 10, 0, -1 do
        gg.toast("‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏° ‡∏Å‡πà‡∏≠‡∏ô " .. i .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
        gg.sleep(1000)
    end

    local Choice_Pet = {
        "üéÉ ‚ù≤ ‡πÅ‡∏û‡∏ó ‡∏ô‡πâ‡∏≥‡πÄ‡∏ï‡πâ‡∏≤ ‚ù≥", --1
        "‚òÉÔ∏è ‚ù≤ ‡πÅ‡∏û‡∏ó ‡∏´‡∏°‡∏ß‡∏Å‡∏ã‡∏≤‡∏ô‡∏ï‡πâ‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ï‡∏±‡∏ß‡∏ô‡∏¥‡πâ‡∏ß‡πÇ‡∏õ‡πâ‡∏á ‚ù≥", --2
        "üç´ ‚ù≤ ‡πÅ‡∏û‡∏ó ‡∏ä‡πá‡∏≠‡∏Ñ‡πÇ‡∏Å‡πâ‡∏î‡∏£‡∏≠‡∏õ ‚ù≥", --3
    }
    
    local typeChoice = gg.choice(Choice_Pet, nil, "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏û‡∏ó")
    local inputPet = gg.prompt(
            {"‡πÅ‡∏û‡∏ó ‡πÄ‡∏™‡∏Å : ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡∏î‡∏≤‡∏ß‡∏™‡∏≤‡∏°‡∏™‡∏µ"},
            {"4265"},
            {""}
        )
        
    local Value_ID = inputPet[1]
    if typeChoice == nil then
        NM_return()
        gg.toast("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡πÅ‡∏û‡∏ó ‡πÄ‡∏•‡∏¢ ‚ùó")
        Game_CK()
        return
    elseif typeChoice == 1 then
        local Name = "üéÉ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡πÅ‡∏û‡∏ó ‡πÅ‡∏•‡πâ‡∏ß ‚úÖ"
        
        gg.clearResults()
        gg.setRanges(gg.REGION_C_ALLOC)
        gg.searchNumber("1000;407", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
        gg.refineNumber("407", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
        NM2_Original = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
        
        if #NM2_Original == 0 then
            gg.alert("‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡πÅ‡∏û‡∏ó ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡∏≠‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà ‚ùó")
            gg.clearResults()
            NM_return()
            Game_CK()
            return
        end
        
        NM2_Original_Value = gg.getValues(NM2_Original)
        for i, v in ipairs(NM2_Original) do
        	if v.flags == gg.TYPE_DWORD then
        		v.value = Value_ID
        		v.freeze = true
        	end
        end
        gg.addListItems(NM2_Original)
        gg.clearResults()
        gg.toast(Name)
        NM2_Check = true
        
    elseif typeChoice == 2 then
        local Name = "‚òÉÔ∏è ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡πÅ‡∏û‡∏ó ‡πÅ‡∏•‡πâ‡∏ß ‚úÖ"
        
        gg.clearResults()
        gg.setRanges(gg.REGION_C_ALLOC)
        gg.searchNumber("1000;554", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
        gg.refineNumber("554", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
        NM2_Original = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
        if #NM2_Original == 0 then
            gg.alert("‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡πÅ‡∏û‡∏ó ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡∏≠‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà ‚ùó")
            gg.clearResults()
            NM_return()
            Game_CK()
            return
        end
        
        NM2_Original_Value = gg.getValues(NM2_Original)
        for i, v in ipairs(NM2_Original) do
        	if v.flags == gg.TYPE_DWORD then
        		v.value = Value_ID
        		v.freeze = true
        	end
        end
        gg.addListItems(NM2_Original)
        gg.clearResults()
        gg.toast(Name)
        NM2_Check = true
        
    elseif typeChoice == 3 then
        local Name = "üç´ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡πÅ‡∏û‡∏ó ‡πÅ‡∏•‡πâ‡∏ß ‚úÖ"
        local Value_1 = "1018"
        local Value_2 = inputPet[1]
            
        gg.clearResults()
        gg.setRanges(gg.REGION_C_ALLOC)
        gg.searchNumber("1,015D;0D;1,000D:9", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
        gg.refineNumber("1015D;0D", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
        NM3_Original = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
        
        if #NM3_Original == 0 then
            gg.alert("‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡πÅ‡∏û‡∏ó ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡∏≠‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà ‚ùó")
            gg.clearResults()
            NM_return()
            Game_CK()
            return
        end
        
        NM3_Original_Value = gg.getValues(NM3_Original)
        for i, v in ipairs(NM3_Original) do
            if v.value == 1015 then
                v.value = Value_1
                v.freeze = true
            end
        end
        
        for i, v in ipairs(NM3_Original) do
            if v.value == 0 then
                v.value = Value_2
                v.freeze = true
            end
        end
        
        gg.addListItems(NM3_Original)
        gg.clearResults()
        gg.toast(Name)
        NM3_Check = true
    end
end

-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

local Ic1_address = nil
local Ic1_Check = false
local Ic1_Original = {}

local Ic_HP_Original = {}
local Ic_HP_Original_Value = {}

function Ice_Land()
    if not Ic1_address then
        gg.clearResults()
        gg.setRanges(gg.REGION_CODE_APP)
        gg.searchNumber("0.81399995089F;123,346.3515625F:5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
        gg.refineNumber("0.81399995089", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
        Ic_HP_Original = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
        
        if #Ic_HP_Original == 0 then
            gg.alert("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏Ñ‡πà‡∏≤ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≠‡∏Å ‚ùó")
            gg.clearResults()
            Game_CK()
            return
        end
        
        Ic_HP_Original_Value = gg.getValues(Ic_HP_Original)
        for i, v in ipairs(Ic_HP_Original) do
            if v.flags == gg.TYPE_FLOAT then
                v.value = "6.10544144e35"
            end
            gg.setValues(Ic_HP_Original)
        end
    
        gg.clearResults()
        gg.setRanges(gg.REGION_CODE_APP)
        gg.searchNumber("4216;4217;4218", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
        local ResultsAll = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
        
        if #ResultsAll == 0 then
            gg.alert("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏Ñ‡πà‡∏≤ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≠‡∏Å ‚ùó")
            gg.clearResults()
            Game_CK()
            return
        end
        Ic1_address = ResultsAll[1].address
        
        for i = 1, #ResultsAll do
            local item = ResultsAll[i]
            if item.value == 4216 or item.value == 4217 or item.value == 4218 then
                Ic1_Original[item.address] = item.value
                gg.clearResults()
            end
        end
    end
    
    local Name_Choice = {
        "üí† ‡πÉ‡∏™‡πà‡πÇ‡∏Ñ‡πâ‡∏î 4216, 4217, 4218 ‡πÄ‡∏≠‡∏á ( ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏¢‡∏∏‡∏î‡πÑ‡∏î‡πâ )",
        "üèÖ ‡∏õ‡∏±‡πâ‡∏° Exp : x2 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ‡πÑ‡∏î‡πâ ( ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏¢‡∏∏‡∏î‡πÑ‡∏î‡πâ )",
        "üëë ‡∏õ‡∏±‡πâ‡∏° Exp : üö´ ‡∏´‡πâ‡∏≤‡∏° ‡πÇ‡∏ö‡∏ô‡∏±‡∏™ ‡∏Å‡∏±‡∏ö x2 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ( ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ 4:30 ‡∏ô.)",
        "üí∞ ‡∏õ‡∏±‡πâ‡∏° ‡πÄ‡∏á‡∏¥‡∏ô : x2 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ‡πÑ‡∏î‡πâ ( ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏¢‡∏∏‡∏î‡πÑ‡∏î‡πâ )",
        "üí≥ ‡∏õ‡∏±‡πâ‡∏° ‡πÄ‡∏á‡∏¥‡∏ô : üö´ ‡∏´‡πâ‡∏≤‡∏° x2 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ( ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏¢‡∏∏‡∏î‡πÑ‡∏î‡πâ )",
    }

    local typeChoice = gg.choice(Name_Choice, nil, "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏±‡πâ‡∏°")
    local selectedType = Name_Choice[typeChoice]
            
    if selectedType == nil then
        gg.setValues(Ic_HP_Original_Value)
        gg.clearResults()
        gg.toast("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏•‡∏¢ ‚ùó")
        Game_CK()
        return
        
    elseif selectedType == "üí† ‡πÉ‡∏™‡πà‡πÇ‡∏Ñ‡πâ‡∏î 4216, 4217, 4218 ‡πÄ‡∏≠‡∏á ( ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏¢‡∏∏‡∏î‡πÑ‡∏î‡πâ )" then
        local inputIce = gg.prompt(
            {"‡∏ä‡πà‡∏≠‡∏á : 4216","‡∏ä‡πà‡∏≠‡∏á : 4217", "‡∏ä‡πà‡∏≠‡∏á : 4218"},
            {"4216","4217","4218"},
            {"","",""}
        )
    
        local Address_Value_1 = inputIce[1]
        local Address_Value_2 = inputIce[2]
        local Address_Value_3 = inputIce[3]
        
        gg.clearResults()
        gg.setValues({
            {address = Ic1_address, value = Address_Value_1, flags = gg.TYPE_DWORD},
            {address = Ic1_address + 4, value = Address_Value_2, flags = gg.TYPE_DWORD},
            {address = Ic1_address + 8, value = Address_Value_3, flags = gg.TYPE_DWORD}
        })
        
        gg.clearResults()
        Ic1_Check = true
        
        local function readTimeFromFile()
            local file = io.open(GG_Time1, "r")
            if file then
                local content = file:read("*all")
                file:close()
                return content
            else
                return nil
            end
        end
        
        local function writeTimeToFile(time)
            local file = io.open(GG_Time1, "w")
            if file then
                file:write(time)
                file:close()
            end
        end
        
        local lastSavedTime1 = readTimeFromFile()
        Input_Time = gg.prompt(
            {"‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤ ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î ‡πÄ‡∏Å‡∏° (‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö = 10:20 ‡∏ô‡∏≤‡∏ó‡∏µ - 0:30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)", "‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô ( ‡∏ô‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏Å‡∏∏‡∏ç‡πÅ‡∏à )", "‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤ ‡∏£‡∏≠‡∏ß‡∏ô ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"},
            {lastSavedTime1 or "5:00","1","15"},
            {"text", "text", "text"}
        )
        
        if Input_Time == nil then
            gg.clearResults()
            gg.setValues(Ic_HP_Original_Value)
            gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
            gg.sleep(50)
            for address, value in pairs(Ic1_Original) do
                gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
            end
            gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
            Ic1_Check = false
            Game_CK()
        end
        
        local minutes, seconds = Input_Time[1]:match("(%d+):(%d+)")
        minutes = tonumber(minutes)
        seconds = tonumber(seconds)
        
        local totalSeconds = minutes * 60 + seconds
        writeTimeToFile(Input_Time[1])
        local Number = Input_Time[2]
        local Waiting = Input_Time[3]
        
        local currentRound = 0
        
        while true do
            for j = 1, tonumber(Number) do
                currentRound = currentRound + 1
                
                for i = 2, 0, -1 do
                    gg.toast("‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏° ‡∏Å‡πà‡∏≠‡∏ô " .. i .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
                    gg.sleep(1000)
                end
                gg.toast("‡πÄ‡∏£‡∏¥‡πà‡∏° ‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤")
                gg.sleep(1000)
                
                for i = 0, totalSeconds do
                    local currentMinutes = math.floor(i / 60)
                    local currentSeconds = i % 60
                    local displayTime = string.format("‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà %d ‡πÄ‡∏ß‡∏•‡∏≤ %d:%02d ‡∏ô.", currentRound, currentMinutes, currentSeconds)
                    gg.toast(displayTime)
                    gg.sleep(1000)
                end
                
                if currentRound >= tonumber(Number) then
                    local totalTimeSeconds = totalSeconds * tonumber(Number)
                    local totalMinutes = math.floor(totalTimeSeconds / 60)
                    local totalSecondsLeft = totalTimeSeconds % 60
                                        
                    gg.clearResults()
                    gg.setValues(Ic_HP_Original_Value)
                    gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
                    gg.sleep(50)
                    for address, value in pairs(Ic1_Original) do
                        gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
                    end
                    gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
                    Ic1_Check = false
                    
                    gg.alert(string.format("üö® ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏∏‡∏Å‡∏£‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß üö®\n‡∏™‡∏£‡∏∏‡∏õ : %d ‡∏£‡∏≠‡∏ö ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î %d ‡∏ô‡∏≤‡∏ó‡∏µ %d ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ", currentRound, totalMinutes, totalSecondsLeft))
                    return
                end
                
                gg.setVisible(true)
                gg.sleep(50)
                gg.setVisible(false)
                for i = Waiting, 0, -1 do
                    local wait_currentMinutes = math.floor(i / 60)
                    local wait_currentSeconds = i % 60
                    local wait_time = string.format("‡∏£‡∏≠‡∏ß‡∏ô %d:%02d ‡∏ô.", wait_currentMinutes, wait_currentSeconds)
                    gg.toast(wait_time)
                    gg.sleep(1000)
                end
            end
            break
        end

        gg.clearResults()
        gg.setValues(Ic_HP_Original_Value)
        gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
        gg.sleep(50)
        for address, value in pairs(Ic1_Original) do
            gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
        end
        gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
        Ic1_Check = false
        
    elseif selectedType == "üèÖ ‡∏õ‡∏±‡πâ‡∏° Exp : ‡πÉ‡∏ä‡πâ x2 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ‡πÑ‡∏î‡πâ ( ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏¢‡∏∏‡∏î‡πÑ‡∏î‡πâ )" then
        local Address_Value_1 = "1"
        local Address_Value_2 = "1"
        local Address_Value_3 = "1"
        
        gg.clearResults()
        gg.setValues({
            {address = Ic1_address, value = Address_Value_1, flags = gg.TYPE_DWORD},
            {address = Ic1_address + 4, value = Address_Value_2, flags = gg.TYPE_DWORD},
            {address = Ic1_address + 8, value = Address_Value_3, flags = gg.TYPE_DWORD}
        })
        
        gg.clearResults()
        Ic1_Check = true
        
        local function readTimeFromFile()
            local file = io.open(GG_Time1, "r")
            if file then
                local content = file:read("*all")
                file:close()
                return content
            else
                return nil
            end
        end
        
        local function writeTimeToFile(time)
            local file = io.open(GG_Time1, "w")
            if file then
                file:write(time)
                file:close()
            end
        end
        
        local lastSavedTime1 = readTimeFromFile()
        Input_Time = gg.prompt(
            {"‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤ ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î ‡πÄ‡∏Å‡∏° (‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö = 10:20 ‡∏ô‡∏≤‡∏ó‡∏µ - 0:30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)", "‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô ( ‡∏ô‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏Å‡∏∏‡∏ç‡πÅ‡∏à )", "‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤ ‡∏£‡∏≠‡∏ß‡∏ô ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"},
            {lastSavedTime1 or "5:00","1","15"},
            {"text", "text", "text"}
        )
        
        if Input_Time == nil then
            gg.clearResults()
            gg.setValues(Ic_HP_Original_Value)
            gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
            gg.sleep(50)
            for address, value in pairs(Ic1_Original) do
                gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
            end
            gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
            Ic1_Check = false
            Game_CK()
        end
        
        local minutes, seconds = Input_Time[1]:match("(%d+):(%d+)")
        minutes = tonumber(minutes)
        seconds = tonumber(seconds)
        
        local totalSeconds = minutes * 60 + seconds
        writeTimeToFile(Input_Time[1])
        local Number = Input_Time[2]
        local Waiting = Input_Time[3]
        
        local currentRound = 0
        
        while true do
            for j = 1, tonumber(Number) do
                currentRound = currentRound + 1
                
                for i = 2, 0, -1 do
                    gg.toast("‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏° ‡∏Å‡πà‡∏≠‡∏ô " .. i .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
                    gg.sleep(1000)
                end
                gg.toast("‡πÄ‡∏£‡∏¥‡πà‡∏° ‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤")
                gg.sleep(1000)
                
                for i = 0, totalSeconds do
                    local currentMinutes = math.floor(i / 60)
                    local currentSeconds = i % 60
                    local displayTime = string.format("‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà %d ‡πÄ‡∏ß‡∏•‡∏≤ %d:%02d ‡∏ô.", currentRound, currentMinutes, currentSeconds)
                    gg.toast(displayTime)
                    gg.sleep(1000)
                end
                
                if currentRound >= tonumber(Number) then
                    local totalTimeSeconds = totalSeconds * tonumber(Number)
                    local totalMinutes = math.floor(totalTimeSeconds / 60)
                    local totalSecondsLeft = totalTimeSeconds % 60
                                        
                    gg.clearResults()
                    gg.setValues(Ic_HP_Original_Value)
                    gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
                    gg.sleep(50)
                    for address, value in pairs(Ic1_Original) do
                        gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
                    end
                    gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
                    Ic1_Check = false
                    
                    gg.alert(string.format("üö® ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏∏‡∏Å‡∏£‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß üö®\n‡∏™‡∏£‡∏∏‡∏õ : %d ‡∏£‡∏≠‡∏ö ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î %d ‡∏ô‡∏≤‡∏ó‡∏µ %d ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ", currentRound, totalMinutes, totalSecondsLeft))
                    return
                end
                
                gg.setVisible(true)
                gg.sleep(50)
                gg.setVisible(false)
                for i = Waiting, 0, -1 do
                    local wait_currentMinutes = math.floor(i / 60)
                    local wait_currentSeconds = i % 60
                    local wait_time = string.format("‡∏£‡∏≠‡∏ß‡∏ô %d:%02d ‡∏ô.", wait_currentMinutes, wait_currentSeconds)
                    gg.toast(wait_time)
                    gg.sleep(1000)
                end
            end
            break
        end

        gg.clearResults()
        gg.setValues(Ic_HP_Original_Value)
        gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
        gg.sleep(50)
        for address, value in pairs(Ic1_Original) do
            gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
        end
        gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
        Ic1_Check = false
        
    elseif selectedType == "üëë ‡∏õ‡∏±‡πâ‡∏° Exp : üö´ ‡∏´‡πâ‡∏≤‡∏° ‡πÇ‡∏ö‡∏ô‡∏±‡∏™ ‡∏Å‡∏±‡∏ö x2 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ( ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ 4:30 ‡∏ô.)" then
        local Address_Value_1 = "553"
        local Address_Value_2 = "1"
        local Address_Value_3 = "1"
        
        gg.clearResults()
        gg.setValues({
            {address = Ic1_address, value = Address_Value_1, flags = gg.TYPE_DWORD},
            {address = Ic1_address + 4, value = Address_Value_2, flags = gg.TYPE_DWORD},
            {address = Ic1_address + 8, value = Address_Value_3, flags = gg.TYPE_DWORD}
        })
        
        gg.clearResults()
        Ic1_Check = true
        
        local function readTimeFromFile()
            local file = io.open(GG_Time1, "r")
            if file then
                local content = file:read("*all")
                file:close()
                return content
            else
                return nil
            end
        end
        
        local function writeTimeToFile(time)
            local file = io.open(GG_Time1, "w")
            if file then
                file:write(time)
                file:close()
            end
        end
        
        local lastSavedTime1 = readTimeFromFile()
        Input_Time = gg.prompt(
            {"‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤ ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î ‡πÄ‡∏Å‡∏° (‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö = 10:20 ‡∏ô‡∏≤‡∏ó‡∏µ - 0:30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)", "‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô ( ‡∏ô‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏Å‡∏∏‡∏ç‡πÅ‡∏à )", "‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤ ‡∏£‡∏≠‡∏ß‡∏ô ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"},
            {lastSavedTime1 or "4:30","1","15"},
            {"text", "text", "text"}
        )
        
        if Input_Time == nil then
            gg.clearResults()
            gg.setValues(Ic_HP_Original_Value)
            gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
            gg.sleep(50)
            for address, value in pairs(Ic1_Original) do
                gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
            end
            gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
            Ic1_Check = false
            Game_CK()
        end
        
        local minutes, seconds = Input_Time[1]:match("(%d+):(%d+)")
        minutes = tonumber(minutes)
        seconds = tonumber(seconds)
        
        local totalSeconds = minutes * 60 + seconds
        writeTimeToFile(Input_Time[1])
        local Number = Input_Time[2]
        local Waiting = Input_Time[3]
        
        local currentRound = 0
        
        while true do
            for j = 1, tonumber(Number) do
                currentRound = currentRound + 1
                
                for i = 2, 0, -1 do
                    gg.toast("‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏° ‡∏Å‡πà‡∏≠‡∏ô " .. i .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
                    gg.sleep(1000)
                end
                gg.toast("‡πÄ‡∏£‡∏¥‡πà‡∏° ‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤")
                gg.sleep(1000)
                
                for i = 0, totalSeconds do
                    local currentMinutes = math.floor(i / 60)
                    local currentSeconds = i % 60
                    local displayTime = string.format("‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà %d ‡πÄ‡∏ß‡∏•‡∏≤ %d:%02d ‡∏ô.", currentRound, currentMinutes, currentSeconds)
                    gg.toast(displayTime)
                    gg.sleep(1000)
                end
                
                if currentRound >= tonumber(Number) then
                    local totalTimeSeconds = totalSeconds * tonumber(Number)
                    local totalMinutes = math.floor(totalTimeSeconds / 60)
                    local totalSecondsLeft = totalTimeSeconds % 60
                                        
                    gg.clearResults()
                    gg.setValues(Ic_HP_Original_Value)
                    gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
                    gg.sleep(50)
                    for address, value in pairs(Ic1_Original) do
                        gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
                    end
                    gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
                    Ic1_Check = false
                    
                    gg.alert(string.format("üö® ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏∏‡∏Å‡∏£‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß üö®\n‡∏™‡∏£‡∏∏‡∏õ : %d ‡∏£‡∏≠‡∏ö ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î %d ‡∏ô‡∏≤‡∏ó‡∏µ %d ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ", currentRound, totalMinutes, totalSecondsLeft))
                    return
                end
                
                gg.setVisible(true)
                gg.sleep(50)
                gg.setVisible(false)
                for i = Waiting, 0, -1 do
                    local wait_currentMinutes = math.floor(i / 60)
                    local wait_currentSeconds = i % 60
                    local wait_time = string.format("‡∏£‡∏≠‡∏ß‡∏ô %d:%02d ‡∏ô.", wait_currentMinutes, wait_currentSeconds)
                    gg.toast(wait_time)
                    gg.sleep(1000)
                end
            end
            break
        end
        
        gg.clearResults()
        gg.setValues(Ic_HP_Original_Value)
        gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
        gg.sleep(50)
        for address, value in pairs(Ic1_Original) do
            gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
        end
        gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
        Ic1_Check = false
        
    elseif selectedType == "üí∞ ‡∏õ‡∏±‡πâ‡∏° ‡πÄ‡∏á‡∏¥‡∏ô : ‡πÉ‡∏ä‡πâ x2 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ‡πÑ‡∏î‡πâ ( ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏¢‡∏∏‡∏î‡πÑ‡∏î‡πâ )" then
        local Address_Value_1 = "4117"
        local Address_Value_2 = "1"
        local Address_Value_3 = "1"
        
        gg.clearResults()
        gg.setValues({
            {address = Ic1_address, value = Address_Value_1, flags = gg.TYPE_DWORD},
            {address = Ic1_address + 4, value = Address_Value_2, flags = gg.TYPE_DWORD},
            {address = Ic1_address + 8, value = Address_Value_3, flags = gg.TYPE_DWORD}
        })
        
        gg.clearResults()
        Ic1_Check = true
        
        local function readTimeFromFile()
            local file = io.open(GG_Time2, "r")
            if file then
                local content = file:read("*all")
                file:close()
                return content
            else
                return nil
            end
        end
        
        local function writeTimeToFile(time)
            local file = io.open(GG_Time2, "w")
            if file then
                file:write(time)
                file:close()
            end
        end
        
        local lastSavedTime2 = readTimeFromFile()
        Input_Time = gg.prompt(
            {"‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤ ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î ‡πÄ‡∏Å‡∏° (‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö = 10:20 ‡∏ô‡∏≤‡∏ó‡∏µ - 0:30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)", "‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô ( ‡∏ô‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏Å‡∏∏‡∏ç‡πÅ‡∏à )", "‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤ ‡∏£‡∏≠‡∏ß‡∏ô ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"},
            {lastSavedTime2 or "00:20","1","15"},
            {"text", "text", "text"}
        )
        
        if Input_Time == nil then
            gg.clearResults()
            gg.setValues(Ic_HP_Original_Value)
            gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
            gg.sleep(50)
            for address, value in pairs(Ic1_Original) do
                gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
            end
            gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
            Ic1_Check = false
            Game_CK()
        end
        
        local minutes, seconds = Input_Time[1]:match("(%d+):(%d+)")
        minutes = tonumber(minutes)
        seconds = tonumber(seconds)
        
        local totalSeconds = minutes * 60 + seconds
        writeTimeToFile(Input_Time[1])
        local Number = Input_Time[2]
        local Waiting = Input_Time[3]
        
        local currentRound = 0
        
        while true do
            for j = 1, tonumber(Number) do
                currentRound = currentRound + 1
                
                for i = 2, 0, -1 do
                    gg.toast("‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏° ‡∏Å‡πà‡∏≠‡∏ô " .. i .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
                    gg.sleep(1000)
                end
                gg.toast("‡πÄ‡∏£‡∏¥‡πà‡∏° ‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤")
                gg.sleep(1000)
                
                for i = 0, totalSeconds do
                    local currentMinutes = math.floor(i / 60)
                    local currentSeconds = i % 60
                    local displayTime = string.format("‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà %d ‡πÄ‡∏ß‡∏•‡∏≤ %d:%02d ‡∏ô.", currentRound, currentMinutes, currentSeconds)
                    gg.toast(displayTime)
                    gg.sleep(1000)
                end
                
                if currentRound >= tonumber(Number) then
                    local totalTimeSeconds = totalSeconds * tonumber(Number)
                    local totalMinutes = math.floor(totalTimeSeconds / 60)
                    local totalSecondsLeft = totalTimeSeconds % 60
                                        
                    gg.clearResults()
                    gg.setValues(Ic_HP_Original_Value)
                    gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
                    gg.sleep(50)
                    for address, value in pairs(Ic1_Original) do
                        gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
                    end
                    gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
                    Ic1_Check = false
                    
                    gg.alert(string.format("üö® ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏∏‡∏Å‡∏£‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß üö®\n‡∏™‡∏£‡∏∏‡∏õ : %d ‡∏£‡∏≠‡∏ö ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î %d ‡∏ô‡∏≤‡∏ó‡∏µ %d ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ", currentRound, totalMinutes, totalSecondsLeft))
                    return
                end
                
                gg.setVisible(true)
                gg.sleep(50)
                gg.setVisible(false)
                for i = Waiting, 0, -1 do
                    local wait_currentMinutes = math.floor(i / 60)
                    local wait_currentSeconds = i % 60
                    local wait_time = string.format("‡∏£‡∏≠‡∏ß‡∏ô %d:%02d ‡∏ô.", wait_currentMinutes, wait_currentSeconds)
                    gg.toast(wait_time)
                    gg.sleep(1000)
                end
            end
            break
        end

        gg.clearResults()
        gg.setValues(Ic_HP_Original_Value)
        gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
        gg.sleep(50)
        for address, value in pairs(Ic1_Original) do
            gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
        end
        gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
        Ic1_Check = false
        
    elseif selectedType == "üí≥ ‡∏õ‡∏±‡πâ‡∏° ‡πÄ‡∏á‡∏¥‡∏ô : üö´ ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏ä‡πâ x2 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ( ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏¢‡∏∏‡∏î‡πÑ‡∏î‡πâ )" then
        local Address_Value_1 = "4117"
        local Address_Value_2 = "4117"
        local Address_Value_3 = "4117"
        
        gg.clearResults()
        gg.setValues({
            {address = Ic1_address, value = Address_Value_1, flags = gg.TYPE_DWORD},
            {address = Ic1_address + 4, value = Address_Value_2, flags = gg.TYPE_DWORD},
            {address = Ic1_address + 8, value = Address_Value_3, flags = gg.TYPE_DWORD}
        })
        
        gg.clearResults()
        Ic1_Check = true
        
        local function readTimeFromFile()
            local file = io.open(GG_Time3, "r")
            if file then
                local content = file:read("*all")
                file:close()
                return content
            else
                return nil
            end
        end
        
        local function writeTimeToFile(time)
            local file = io.open(GG_Time3, "w")
            if file then
                file:write(time)
                file:close()
            end
        end
        
        local lastSavedTime3 = readTimeFromFile()
        Input_Time = gg.prompt(
            {"‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤ ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î ‡πÄ‡∏Å‡∏° (‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö = 10:20 ‡∏ô‡∏≤‡∏ó‡∏µ - 0:30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)", "‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô ( ‡∏ô‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏Å‡∏∏‡∏ç‡πÅ‡∏à )", "‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤ ‡∏£‡∏≠‡∏ß‡∏ô ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"},
            {lastSavedTime3 or "00:13","1","15"},
            {"text", "text", "text"}
        )
        
        if Input_Time == nil then
            gg.clearResults()
            gg.setValues(Ic_HP_Original_Value)
            gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
            gg.sleep(50)
            for address, value in pairs(Ic1_Original) do
                gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
            end
            gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
            Ic1_Check = false
            Game_CK()
        end
        
        local minutes, seconds = Input_Time[1]:match("(%d+):(%d+)")
        minutes = tonumber(minutes)
        seconds = tonumber(seconds)
        
        local totalSeconds = minutes * 60 + seconds
        writeTimeToFile(Input_Time[1])
        local Number = Input_Time[2]
        local Waiting = Input_Time[3]
        
        local currentRound = 0
        
        while true do
            for j = 1, tonumber(Number) do
                currentRound = currentRound + 1
                
                for i = 2, 0, -1 do
                    gg.toast("‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏° ‡∏Å‡πà‡∏≠‡∏ô " .. i .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
                    gg.sleep(1000)
                end
                gg.toast("‡πÄ‡∏£‡∏¥‡πà‡∏° ‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤")
                gg.sleep(1000)
                
                for i = 0, totalSeconds do
                    local currentMinutes = math.floor(i / 60)
                    local currentSeconds = i % 60
                    local displayTime = string.format("‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà %d ‡πÄ‡∏ß‡∏•‡∏≤ %d:%02d ‡∏ô.", currentRound, currentMinutes, currentSeconds)
                    gg.toast(displayTime)
                    gg.sleep(1000)
                end
                
                if currentRound >= tonumber(Number) then
                    local totalTimeSeconds = totalSeconds * tonumber(Number)
                    local totalMinutes = math.floor(totalTimeSeconds / 60)
                    local totalSecondsLeft = totalTimeSeconds % 60
                                        
                    gg.clearResults()
                    gg.setValues(Ic_HP_Original_Value)
                    gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
                    gg.sleep(50)
                    for address, value in pairs(Ic1_Original) do
                        gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
                    end
                    gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
                    Ic1_Check = false
                    
                    gg.alert(string.format("üö® ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏∏‡∏Å‡∏£‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß üö®\n‡∏™‡∏£‡∏∏‡∏õ : %d ‡∏£‡∏≠‡∏ö ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î %d ‡∏ô‡∏≤‡∏ó‡∏µ %d ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ", currentRound, totalMinutes, totalSecondsLeft))
                    return
                end
                
                gg.setVisible(true)
                gg.sleep(50)
                gg.setVisible(false)
                for i = Waiting, 0, -1 do
                    local wait_currentMinutes = math.floor(i / 60)
                    local wait_currentSeconds = i % 60
                    local wait_time = string.format("‡∏£‡∏≠‡∏ß‡∏ô %d:%02d ‡∏ô.", wait_currentMinutes, wait_currentSeconds)
                    gg.toast(wait_time)
                    gg.sleep(1000)
                end
            end
            break
        end

        gg.clearResults()
        gg.setValues(Ic_HP_Original_Value)
        gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
        gg.sleep(50)
        for address, value in pairs(Ic1_Original) do
            gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
        end
        gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
        Ic1_Check = false
    end
end


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

function _Other()
    local menu = gg.choice({
        "üöÄ ‡πÄ‡∏£‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏°", --1
        "üåà ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ã‡∏∑‡πâ‡∏≠ Booter", --2
        "üéÜ ‡∏õ‡∏±‡πâ‡∏° ‡∏ú‡∏á‡∏ß‡∏¥‡πÄ‡∏®‡∏©", --4
        "üèñÔ∏è ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ ‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏ô‡∏≤‡∏á‡∏ü‡πâ‡∏≤‡∏ó‡∏∞‡πÄ‡∏•", --5
        "‚óÄÔ∏è ‡∏Å‡∏•‡∏±‡∏ö" --6
    }, nil, "üî∞ ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô ‡∏≠‡∏∑‡πà‡∏ô‡πÜ üî∞")

    if menu == nil then 
    else
        if menu == 1 then Speed_Game() end
        if menu == 2 then Buy_Boot() end
        if menu == 3 then PV_Poo() end
        if menu == 4 then Cookie_Talay() end
        if menu == 5 then Game_CK() end
    end
end

local isSpeed = false
function Speed_Game()
    if isSpeed == false then
        local currentSpeed = gg.getSpeed()
        if currentSpeed then
            Setnum = gg.prompt(
             {'‡πÉ‡∏™‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß [1; 30]'}, nil,
             {'number'}
            )
            num = Setnum[1]
            if num then
                gg.setSpeed(num)
                gg.toast("üöÄ ‡πÄ‡∏õ‡∏¥‡∏î ‡πÄ‡∏£‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß " .. num .. " ‡πÄ‡πÄ‡∏•‡πâ‡∏ß")
            else
                gg.toast("‚ùå ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡πá‡∏ß‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 1 ‡∏ñ‡∏∂‡∏á 6 ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
            end
        end
        isSpeed = true
    else
        local currentSpeed = gg.getSpeed()
        if currentSpeed ~= "1" then
            gg.setSpeed("1")
            gg.toast("üö® ‡∏õ‡∏¥‡∏î ‡πÄ‡∏£‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏° ‡πÅ‡∏•‡πâ‡∏ß")
        end
        isSpeed = false
    end
end

-------------------------------------------------------------------------------------------------------------------

local AG_Original = {}
local isBuySagged = false
local Original_Buy_Values = {}

function Buy_Boot()
    if isBuySagged == false then
        local Item_Names = {
            "üî© ‚ù≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏°‡πà‡πÄ‡∏´‡∏•‡πá‡∏Å ‚ù≥",
            "üí∞x2 ‚ù≤ ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏™‡∏≠‡∏á‡πÄ‡∏ó‡πà‡∏≤ ‚ù≥",
            "üèá ‚ù≤ ‡∏≠‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡πá‡∏ß ‚ù≥",
            "üë• ‚ù≤ ‡∏ß‡∏¥‡πà‡∏á‡∏ú‡∏•‡∏±‡∏î ‚ù≥",
            "üîã ‚ù≤ ‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡∏¢‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏ä‡πâ‡∏≤‡∏•‡∏á ‚ù≥",
            "üòá ‚ù≤ ‡∏Ñ‡∏∑‡∏ô‡∏ä‡∏µ‡∏û 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏î‡πâ‡∏ß‡∏¢‡∏û‡∏•‡∏±‡∏á 40% ‚ù≥",
            "üèÑ ‚ù≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡πà‡∏á‡πÑ‡∏î‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÅ‡∏™‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô ‚ù≥",
            "üèóÔ∏è ‚ù≤ ‡∏ä‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏µ‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡πÑ‡∏î‡πâ 40% ‚ù≥",
            "üèçÔ∏è ‚ù≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô 30% ‚ù≥",
            "üí∞ ‚ù≤ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏µ‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ‚ù≥",
            "üï∂Ô∏è ‚ù≤ ‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏ô ‚ù≥",
            "üíâ ‚ù≤ ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÇ‡∏û‡∏ä‡∏±‡πà‡∏ô‡∏û‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô ‚ù≥",
            "üì§ ‚ù≤ ‡∏ä‡πà‡∏ß‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏∏‡∏° 2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‚ù≥",
        }
        
        local typeChoice = gg.choice(Item_Names, nil, "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏Å")
        if typeChoice == nil then
            return
        end
        
        local selectedType = Item_Names[typeChoice]
        local ID
        local Name
        
        if selectedType == "üî© ‚ù≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏°‡πà‡πÄ‡∏´‡∏•‡πá‡∏Å ‚ù≥" then
            ID = "2013"
            Name = "üî© ‚ù≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏°‡πà‡πÄ‡∏´‡∏•‡πá‡∏Å ‚ù≥"
        elseif selectedType == "üí∞x2 ‚ù≤ ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏™‡∏≠‡∏á‡πÄ‡∏ó‡πà‡∏≤ ‚ù≥" then
            ID = "2003"
            Name = "üí∞x2 ‚ù≤ ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏™‡∏≠‡∏á‡πÄ‡∏ó‡πà‡∏≤ ‚ù≥"
        elseif selectedType == "üèá ‚ù≤ ‡∏≠‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡πá‡∏ß ‚ù≥" then
            ID = "2001"
            Name = "üèá ‚ù≤ ‡∏≠‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡πá‡∏ß ‚ù≥"
        elseif selectedType == "üë• ‚ù≤ ‡∏ß‡∏¥‡πà‡∏á‡∏ú‡∏•‡∏±‡∏î ‚ù≥" then
            ID = "2002"
            Name = "üë• ‚ù≤ ‡∏ß‡∏¥‡πà‡∏á‡∏ú‡∏•‡∏±‡∏î ‚ù≥"
        elseif selectedType == "üîã ‚ù≤ ‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡∏¢‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏ä‡πâ‡∏≤‡∏•‡∏á ‚ù≥" then
            ID = "2005"
            Name = "üîã ‚ù≤ ‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡∏¢‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏ä‡πâ‡∏≤‡∏•‡∏á ‚ù≥"
        elseif selectedType == "üòá ‚ù≤ ‡∏Ñ‡∏∑‡∏ô‡∏ä‡∏µ‡∏û 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏î‡πâ‡∏ß‡∏¢‡∏û‡∏•‡∏±‡∏á 40% ‚ù≥" then
            ID = "2006"
            Name = "üòá ‚ù≤ ‡∏Ñ‡∏∑‡∏ô‡∏ä‡∏µ‡∏û 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏î‡πâ‡∏ß‡∏¢‡∏û‡∏•‡∏±‡∏á 40% ‚ù≥"
        elseif selectedType == "üèÑ ‚ù≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡πà‡∏á‡πÑ‡∏î‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÅ‡∏™‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô ‚ù≥" then
            ID = "2007"
            Name = "üèÑ ‚ù≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡πà‡∏á‡πÑ‡∏î‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÅ‡∏™‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô ‚ù≥"
        elseif selectedType == "üèóÔ∏è ‚ù≤ ‡∏ä‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏µ‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡πÑ‡∏î‡πâ 40% ‚ù≥" then
            ID = "2008"
            Name = "üèóÔ∏è ‚ù≤ ‡∏ä‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏µ‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡πÑ‡∏î‡πâ 40% ‚ù≥"
        elseif selectedType == "üèçÔ∏è ‚ù≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô 30% ‚ù≥" then
            ID = "2009"
            Name = "üèçÔ∏è ‚ù≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô 30% ‚ù≥"
        elseif selectedType == "üí∞ ‚ù≤ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏µ‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ‚ù≥" then
            ID = "2010"
            Name = "üí∞ ‚ù≤ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏µ‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ‚ù≥"
        elseif selectedType == "üï∂Ô∏è ‚ù≤ ‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏ô ‚ù≥" then
            ID = "2011"
            Name = "üï∂Ô∏è ‚ù≤ ‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏ô ‚ù≥"
        elseif selectedType == "üíâ ‚ù≤ ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÇ‡∏û‡∏ä‡∏±‡πà‡∏ô‡∏û‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô ‚ù≥" then
            ID = "2012"
            Name = "üíâ ‚ù≤ ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÇ‡∏û‡∏ä‡∏±‡πà‡∏ô‡∏û‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô ‚ù≥"
        elseif selectedType == "üì§ ‚ù≤ ‡∏ä‡πà‡∏ß‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏∏‡∏° 2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‚ù≥" then
            ID = "2014"
            Name = "üì§ ‚ù≤ ‡∏ä‡πà‡∏ß‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏∏‡∏° 2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‚ù≥"
        else
            gg.alert("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏•‡∏¢ ‚ùó")
            return
        end
        
        gg.clearResults()
        gg.setRanges(gg.REGION_C_ALLOC | gg.REGION_CODE_APP)
        gg.searchNumber("101201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
        AG_Original = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
        
        if #AG_Original == 0 then
            gg.clearResults()
            gg.alert("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡∏Ñ‡πà‡∏≤ ‡∏ö‡∏π‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå ‚ùó")
            return
        end
        Original_Buy_Values = gg.getValues(AG_Original)
        
        gg.editAll(ID, gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
        gg.clearResults()
        gg.toast(Name)
        isBuySagged = true
    else
        gg.clearResults()
        gg.setValues(Original_Buy_Values)
        gg.setValues(AG_Original)
        gg.clearResults()
        gg.toast("üö® ‡∏õ‡∏¥‡∏î‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô ‡∏ã‡∏∑‡πâ‡∏≠ Booter ‡πÅ‡∏•‡πâ‡∏ß ‚ùå")
        isBuySagged = false
    end
end

-------------------------------------------------------------------------------------------------------------------

local PV_Original = {}
local isPv = false
function PV_Poo()
    if isPv == false then
        gg.clearResults()
        gg.setRanges(gg.REGION_CODE_APP)
        gg.searchNumber("101201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
        PV_Original = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
        
        if #PV_Original == 0 then
            gg.clearResults()
            gg.alert("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏Ñ‡πà‡∏≤ ‡∏õ‡∏±‡πâ‡∏° ‡∏ú‡∏á‡∏ß‡∏¥‡πÄ‡∏®‡∏© ‚ùó")
            _Other()
            return
        end
        
        gg.editAll("1100701", gg.TYPE_DWORD)
        gg.clearResults()
        gg.toast("üéÜ ‡πÄ‡∏õ‡∏¥‡∏î‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô ‡∏õ‡∏±‡πâ‡∏° ‡∏ú‡∏á‡∏ß‡∏¥‡πÄ‡∏®‡∏© ‡πÅ‡∏•‡πâ‡∏ß ‚úÖ")
        isPv = true
    else
        gg.clearResults()
        gg.setValues(PV_Original)
        gg.clearResults()
        gg.toast("üéÜ ‡∏õ‡∏¥‡∏î‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô ‡∏õ‡∏±‡πâ‡∏° ‡∏ú‡∏á‡∏ß‡∏¥‡πÄ‡∏®‡∏© ‡πÅ‡∏•‡πâ‡∏ß ‚ùå")
        isPv = false
    end
end

-------------------------------------------------------------------------------------------------------------------

local CT_Check = false
local CT_Original = {}
function Cookie_Talay()
    result = gg.alert("‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡πÉ‡∏™‡πà‡πÑ‡∏ü‡∏•‡πå ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ ‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞  ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô 999,999 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç", "‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö", "‡∏ï‡∏Å‡∏•‡∏á")
    if result == 1 then
        gg.toast("‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö")
        return
    end
    
    gg.clearResults()
    gg.setRanges(gg.REGION_CODE_APP)
    gg.searchNumber("101201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    CT_Original = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
    
    if #CT_Original == 0 then
        gg.clearResults()
        gg.alert("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏Ñ‡πà‡∏≤ ‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏ô‡∏≤‡∏á‡∏ü‡πâ‡∏≤‡∏ó‡∏∞‡πÄ‡∏• ‚ùó")
        _Other()
        return
    end
        
    gg.editAll("106501", gg.TYPE_DWORD)
    gg.clearResults()
    gg.toast("üèñÔ∏è ‡πÄ‡∏õ‡∏¥‡∏î ‡∏ã‡∏∑‡πâ‡∏≠ ‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏ô‡∏≤‡∏á‡∏ü‡πâ‡∏≤‡∏ó‡∏∞‡πÄ‡∏• ‡πÅ‡∏•‡πâ‡∏ß ‚úÖ")
    CT_Check = true
    
    for i = 20, 0, -1 do
        gg.toast("‡πÑ‡∏õ‡∏Å‡∏î‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡∏ô‡∏≤‡∏á‡∏ü‡πâ‡∏≤ " .. i .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
        gg.sleep(1000)
    end
    
    gg.clearResults()
    gg.setValues(CT_Original)
    gg.clearResults()
    gg.toast("üèñÔ∏è ‡∏õ‡∏¥‡∏î ‡∏ã‡∏∑‡πâ‡∏≠ ‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏ô‡∏≤‡∏á‡∏ü‡πâ‡∏≤‡∏ó‡∏∞‡πÄ‡∏• ‡πÅ‡∏•‡πâ‡∏ß ‚ùå")
    
    CT_Check = false
end

-------------------------------------------------------------------------------------------------------------------

function Off_All()
    local any_function_active = false

-------------------- Normal Land Pum --------------------
    gg.setValues(HP_Original_Value)
    gg.sleep(50)
    gg.setValues(Sag_Original_Value)
    gg.sleep(50)
        
    if NM1_Check then
        gg.clearResults()
        for address, value in pairs(NM1_Original) do
            gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
        end
        gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
        NM1_Check = false
    end
    gg.sleep(50)
    
    if NM2_Check then
        gg.clearResults()
        gg.setValues(NM2_Original_Value)
        gg.removeListItems(NM2_Original)
        gg.toast("üåø ‡∏õ‡∏¥‡∏î ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á ‡πÅ‡∏•‡πâ‡∏ß üå≤")
        NM2_Check = false
    end
    gg.sleep(50)
    
    if NM3_Check then
        gg.clearResults()
        gg.setValues(NM3_Original_Value)
        gg.removeListItems(NM3_Original)
        gg.toast("üéã ‡∏õ‡∏¥‡∏î ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á ‡πÅ‡∏•‡πâ‡∏ß ‚òÉÔ∏è")
        NM3_Check = false
    end
    gg.sleep(50)
    
-------------------- Ice Land Pum --------------------
    
    if Ic1_Check then
        gg.clearResults()
        gg.setValues(Ic_HP_Original_Value)
        gg.toast("üö® ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ HP ‡πÅ‡∏•‡πâ‡∏ß üíâ")
        gg.sleep(50)
        for address, value in pairs(Ic1_Original) do
            gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
        end
        gg.toast("üå≥ ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß üèÜ")
        Ic1_Check = false
    end
    gg.sleep(50)
    
-------------------- Auto Pum --------------------
        
    if Auto_Check then
        gg.clearResults()
        for address, value in pairs(Auto_Original) do
            gg.setValues({{address = address, value = value, flags = gg.TYPE_DWORD}})
        end
        gg.toast("üöá ‡∏õ‡∏¥‡∏î ‡∏õ‡∏±‡πâ‡∏°‡∏Ç‡∏≠‡∏á ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÅ‡∏•‡πâ‡∏ß ü•å")
        Auto_Check = false
    end
    gg.sleep(50)
    
    if Au1_Check then
        gg.clearResults()
        gg.setValues(Au1_Original_Value)
        gg.removeListItems(Au1_Original)
        gg.toast("üåø ‡∏õ‡∏¥‡∏î ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á ‡πÅ‡∏•‡πâ‡∏ß üå≤")
        Au1_Check = false
    end
    gg.sleep(50)
    
    if Au2_Check then
        gg.clearResults()
        gg.setValues(Au2_Original_Value)
        gg.removeListItems(Au2_Original)
        gg.toast("üéã ‡∏õ‡∏¥‡∏î ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á ‡πÅ‡∏•‡πâ‡∏ß ‚òÉÔ∏è")
        Au2_Check = false
    end
    gg.sleep(50)
    
    if AA_Check then
        gg.clearResults()
        gg.removeListItems(AA)
        AA_Check = false
    end
    gg.sleep(50)
    
    if RR_Check then
        gg.clearResults()
        gg.removeListItems(RR)
        gg.toast("üîÆ ‡∏õ‡∏¥‡∏î‡∏õ‡∏±‡πâ‡∏° ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÅ‡∏•‡πâ‡∏ß üè∫")
        RR_Check = false
    end
    gg.sleep(50)
    
-------------------- Other --------------------
    if isSpeed == true then
        local currentSpeed = gg.getSpeed()
        if currentSpeed ~= "1" then
            gg.setSpeed("1")
            gg.toast("üö® ‡∏õ‡∏¥‡∏î ‡πÄ‡∏£‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏° ‡πÅ‡∏•‡πâ‡∏ß")
        end
        isSpeed = false
    end
    gg.sleep(50)
    
    if isBuySagged == true then
        gg.clearResults()
        gg.setValues(Original_Buy_Values)
        gg.setValues(AG_Original)
        gg.clearResults()
        gg.toast("üö® ‡∏õ‡∏¥‡∏î‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô ‡∏ã‡∏∑‡πâ‡∏≠ Booter ‡πÅ‡∏•‡πâ‡∏ß ‚ùå")
        isBuySagged = false
    end
    gg.sleep(50)
        
    if isPv == true then
        gg.clearResults()
        gg.setValues(PV_Original)
        gg.clearResults()
        gg.toast("üéÜ ‡∏õ‡∏¥‡∏î‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô ‡∏õ‡∏±‡πâ‡∏° ‡∏ú‡∏á‡∏ß‡∏¥‡πÄ‡∏®‡∏© ‡πÅ‡∏•‡πâ‡∏ß ‚ùå")
        isPv = false
    end
    gg.sleep(50)
    
    if CT_Check == true then
        gg.clearResults()
        gg.setValues(CT_Original)
        gg.clearResults()
        gg.toast("üèñÔ∏è ‡∏õ‡∏¥‡∏î‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô ‡∏ã‡∏∑‡πâ‡∏≠ ‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏ó‡∏∞‡πÄ‡∏• ‡πÅ‡∏•‡πâ‡∏ß ‚ùå")
        CT_Check = false
    end
    
    if not any_function_active then
        gg.toast("üòÅ ‡∏õ‡∏¥‡∏î ‡∏ó‡∏∏‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô ‡πÅ‡∏•‡πâ‡∏ßüî•")
    end
end

-------------------------------------------------------------------------------------
local Admin = "============================\n" ..
               "‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ : XTers\n" ..
               "Game : Cookie Run Kakao\n" ..
               "Update : 24/03/2567\n" ..
               "============================"
function Update_script()
    local Telegram = "https://t.me/XTers_Gs"
    local Discord = "https://discord.com/invite/uEtuuDcYdg"
    local message = "üî∞ ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ ‡πÄ‡∏û‡∏¥‡πà‡∏° ‡∏ß‡∏±‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà ‚úÖ\n\n" ..
                    "üçá Telegram : " .. Telegram .. "\n" ..
                    "üå∂Ô∏è Discord : " .. Discord .. "\n\n" ..
                    "‡πÄ‡∏û‡∏¥‡πà‡∏° 1 ‡∏ß‡∏±‡∏ô : 15 ‡∏ö‡∏≤‡∏ó\n" ..
                    "‡πÄ‡∏û‡∏¥‡πà‡∏° 3 ‡∏ß‡∏±‡∏ô : 40 ‡∏ö‡∏≤‡∏ó\n" ..
                    "‡πÄ‡∏û‡∏¥‡πà‡∏° 7 ‡∏ß‡∏±‡∏ô : 70 ‡∏ö‡∏≤‡∏ó\n" ..
                    "‡πÄ‡∏û‡∏¥‡πà‡∏° 15 ‡∏ß‡∏±‡∏ô : 100 ‡∏ö‡∏≤‡∏ó\n" ..
                    "‡πÄ‡∏û‡∏¥‡πà‡∏° 30 ‡∏ß‡∏±‡∏ô : 150 ‡∏ö‡∏≤‡∏ó"
                    
    result = gg.alert(message, "Telegram", "Discord", "‡∏õ‡∏¥‡∏î")
    if result == 1 then
        gg.copyText(Telegram)
        gg.toast("‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å Telegram ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
        print(Admin)
        return
    elseif result == 2 then
        gg.copyText(Discord)
        gg.toast("‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å Discord ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
        print(Admin)
        return
    elseif result == 3 then
        print(Admin)
        return
    end
end

-------------------------------------------------------------------------------------

function ex()
    Off_All()
    Update_script()
    gg.setVisible(true)
    os.exit()
end

while true do
    if gg.isVisible(true) then
       MENUXMR = 1
       gg.setVisible(false)
    end
    if MENUXMR == 1 then
        Game_CK()
    end
    MENUXMR = -1
end