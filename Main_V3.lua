-- ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤
function encryptDateTime(dateTime, shift)
    local parts = {}
    for part in dateTime:gmatch("[^/]+") do
        table.insert(parts, encryptNumberAndSymbol(part, shift))
    end
    return table.concat(parts, "/")
end

local GG = gg.PACKAGE
local file_path = "/storage/emulated/0/Android/data/" .. GG .. "/cache/"
local Check_User = file_path .. "register_user.lua"

-- ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å GitHub
local API_URL = "https://raw.githubusercontent.com/EnJirad/Mobile/main/User_CRK.lua"
local API = gg.makeRequest(API_URL).content
if API then
    local success, userContent = pcall(load(API))
    if not success then
        print("‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á Internet ‡πÑ‡∏î‡πâ")
        return
    end
end

-- ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå
local shift_amount = 5
function encryptNumberAndSymbol(input, shift)
    local result = ""
    for i = 1, #input do
        local char = input:sub(i, i)
        local ascii = char:byte()
        if ascii >= 48 and ascii <= 57 then -- ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
            ascii = ascii + shift
            if ascii > 57 then
                ascii = ascii - 10
            end
        elseif ascii >= 33 and ascii <= 126 then -- ‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå (ASCII 33-126)
            ascii = ascii + shift
            if ascii > 126 then
                ascii = ascii - 94
            end
        end
        result = result .. string.char(ascii)
    end
    return result
end

-- ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå register_user.lua
local userFile = io.open(Check_User, "r")
if userFile then
    local userContent = userFile:read("*all")
    userFile:close()
    
    -- ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ID ‡πÅ‡∏•‡∏∞ Key ‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    local inputID = gg.prompt(
        {"‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å : ID","‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å : Key"},
        {"0MJA2Z","DjzqWK95sZQplo4m4GvFkkcXVOk3biEW"},
        {"text","text"}
    )

    -- ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á
    if inputID == nil or inputID[1] == "" or inputID[2] == "" then
        os.remove(Check_User)
        gg.alert("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
        gg.setVisible(false)
        return
    end
    
    if inputID[1] == "" then
        os.remove(Check_User)
        gg.alert("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏£‡∏≠‡∏Å : ID")
        gg.setVisible(false)
        return
    end
    
    if inputID[2] == "" then
        os.remove(Check_User)
        gg.alert("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏£‡∏≠‡∏Å : Key")
        gg.setVisible(false)
        return
    end
    
    -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    local pattern = '{%s*No%s*=%s*"(%d+)"%s*,%s*ID%s*=%s*"(%w+)"%s*,%s*Key%s*=%s*"(%w+)"%s*,%s*Status%s*=%s*"(%a+)"%s*,%s*Time%s*=%s*"(%d+)"%s*}'
    local users = {}
    for No, ID, Key, Status, Time in userContent:gmatch(pattern) do
        table.insert(users, {No = No, ID = ID, Key = Key, Status = Status, Time = Time})
    end
    
    local foundID = false
    local foundKey = false
    for _, user in ipairs(users) do
        if user.ID == inputID[1] and user.Key == inputID[2] then
            if user.Status == "true" then
                local Admin = "============================\n" ..
                               "‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ : XTers\n" ..
                               "Game : Cookie Run Kakao\n" ..
                               "Update : 21/03/2567\n" ..
                               "============================"
                function Update_script()
                    local Telegram = "https://t.me/XTers_Gs"
                    local Discord = "https://discord.com/invite/uEtuuDcYdg"
                    local message = "üö´ Key ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß : ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏ä‡πà‡∏≤‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå\n\n" ..
                                    "üçá Telegram : " .. Telegram .. "\n" ..
                                    "üå∂Ô∏è Discord : " .. Discord .. "\n\n" ..
                                    "‡πÄ‡∏ä‡πà‡∏≤ 1 ‡∏ß‡∏±‡∏ô : 20 ‡∏ö‡∏≤‡∏ó\n" ..
                                    "‡πÄ‡∏ä‡πà‡∏≤ 3 ‡∏ß‡∏±‡∏ô : 50 ‡∏ö‡∏≤‡∏ó\n" ..
                                    "‡πÄ‡∏ä‡πà‡∏≤ 7 ‡∏ß‡∏±‡∏ô : 100 ‡∏ö‡∏≤‡∏ó\n" ..
                                    "‡πÄ‡∏ä‡πà‡∏≤ 15 ‡∏ß‡∏±‡∏ô : 150 ‡∏ö‡∏≤‡∏ó\n" ..
                                    "‡πÄ‡∏ä‡πà‡∏≤ 30 ‡∏ß‡∏±‡∏ô : 200 ‡∏ö‡∏≤‡∏ó"
                                    
                    result = gg.alert(message, "Telegram", "Discord", "‡∏õ‡∏¥‡∏î")
                    if result == 1 then
                        gg.copyText(Telegram)
                        gg.toast("‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å Telegram ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
                        print(Admin)
                        return
                    elseif result == 2 then
                        gg.copyText(Discord)
                        gg.toast("‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å Discord ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
                        print(Admin)
                        return
                    elseif result == 3 then
                        print(Admin)
                        return
                    end
                end
                gg.alert("üö´ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà User")
                Update_script()
                os.remove(Check_User)
                return
            else
                foundID = true
                foundKey = true
                gg.alert("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô User ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‚úÖ")
                                
                local Key_Path = "/storage/emulated/0/Android/"
                local Key_File = Key_Path .. ".com.google.android.crk1"
                
                local keyFile = io.open(Key_File, "w")
                if keyFile then
                    local encrypted_ID = encryptNumberAndSymbol(user.ID, shift_amount)
                    local encrypted_Key = encryptNumberAndSymbol(user.Key, shift_amount)
                    local start_time = os.date("%Y/%m/%d/%X")
                    local end_time = os.date("%Y/%m/%d/%X", os.time() + user.Time * 24 * 60 * 60)
                    local encrypted_start_time = encryptDateTime(start_time, shift_amount)
                    local encrypted_end_time = encryptDateTime(end_time, shift_amount)
                    keyFile:write(string.format("%s|%s|%s|%s", encrypted_ID, encrypted_Key, encrypted_start_time, encrypted_end_time))
                    keyFile:close()
                else
                    os.remove(Check_User)
                end
                
                os.remove(Check_User)
                print("‚úÖ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ ‡∏£‡∏±‡∏ô ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‚úÖ")
                break
            end
        elseif user.ID == inputID[1] then
            foundID = true
        elseif user.Key == inputID[2] then
            foundKey = true
        end
    end

    if not foundID and not foundKey then
        os.remove(Check_User)
        gg.alert("üö´ ID ‡πÅ‡∏•‡∏∞ Key ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    elseif not foundID then
        os.remove(Check_User)
        gg.alert("üö´ ID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    elseif not foundKey then
        os.remove(Check_User)
        gg.alert("üö´ Key ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    end
else
    os.remove(Check_User)
    gg.alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô ‡∏£‡∏∞‡∏ö‡∏ö")
end
